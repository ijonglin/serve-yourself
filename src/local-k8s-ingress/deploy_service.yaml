kind: Pod
apiVersion: v1
metadata:
  name: foo-app
  labels:
    app: foo
spec:
  containers:
  - command:
    - /agnhost
    - netexec
    - --http-port
    - "8080"
    image: registry.k8s.io/e2e-test-images/agnhost:2.39
    name: foo-app
---
kind: Service
apiVersion: v1
metadata:
  name: foo-service
spec:
  selector:
    app: foo
  ports:
  # Default port used by the image
  - port: 8080
---
kind: Pod
apiVersion: v1
metadata:
  name: bar-app
  labels:
    app: bar
spec:
  containers:
  - command:
    - /agnhost
    - netexec
    - --http-port
    - "8080"
    image: registry.k8s.io/e2e-test-images/agnhost:2.39
    name: bar-app
---
kind: Service
apiVersion: v1
metadata:
  name: bar-service
spec:
  selector:
    app: bar
  ports:
  # Default port used by the image
  - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - with curl use the -u option! '
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /foo(/|$)(.*)
        backend:
          service:
            name: foo-service
            port:
              number: 8080
      - pathType: Prefix
        path: /bar(/|$)(.*)
        backend:
          service:
            name: bar-service
            port:
              number: 8080
      - pathType: Prefix
        path: /flask(/|$)(.*)
        backend:
          service:
            name: flask-injection-service
            port:
              number: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-injection-wrapper-deployment
  labels:
    app: flask-wrapper-injection-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-wrapper-injection-container
  template:
    metadata:
      labels:
        app: flask-wrapper-injection-container
    spec:
      containers:
      - name: flask-wrapper-injection-container
        # Change to the docker image that you wish to deploy
        image: ijonglin/flask-wrapper-injection
        ports:
          - containerPort: 8888
        env:
          - name: "FLASK_PORT"
            value: "8888"
---
kind: Service
apiVersion: v1
metadata:
  name: flask-injection-service
spec:
  selector:
    app: flask-wrapper-injection-container
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
---
